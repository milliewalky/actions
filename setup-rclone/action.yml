name: setup rclone action
description: download and unpack rclone for gh actions
inputs:
  conf:
    description: rclone conf encoded in base64
    default: false

runs:
  using: composite
  steps:
    - name: resolve url and download rclone
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: |
        $response = Invoke-RestMethod -Uri "https://api.github.com/repos/rclone/rclone/releases/latest"
        $download_url = $response.assets | Where-Object { $_.name -match 'windows-amd64.zip' } | Select-Object -ExpandProperty browser_download_url
        Invoke-WebRequest -Uri $download_url -OutFile "rclone.zip"

    - name: unpack rclone
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: Expand-Archive -Path "rclone.zip" -DestinationPath "rclone"

    - name: move rclone contents and cleanup
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: |
        Pushd rclone
        $rclone_unpacked_dir = Get-ChildItem -Directory | Where-Object { $_.Name -match 'rclone-v.*-windows-amd64' }
        Move-Item -Path "$rclone_unpacked_dir\*" -Destination "."
        Popd

    - name: rclone.conf from secret
      shell: pwsh
      working-directory: ${{ runner.temp }}
      run: |
        [IO.File]::WriteAllBytes("rclone\rclone.conf", [Convert]::FromBase64String($env:conf))
      env:
        conf: ${{ inputs.conf }}

    - name: add rclone to path
      shell: pwsh
      run: echo "${{ runner.temp }}/rclone" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
